{{- /*
Copyright VMware, Inc.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}

# PVC for Odoo
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ include "common.names.fullname" . }}-odoo
  namespace: {{ .Release.Namespace | quote }}
  labels: 
    {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    {{- if .Values.persistence.resourcePolicy }}
    helm.sh/resource-policy: {{ .Values.persistence.resourcePolicy | quote }}
    {{- end }}
    {{- if or .Values.persistence.annotations .Values.commonAnnotations }}
    {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.persistence.annotations .Values.commonAnnotations) "context" . ) }}
    {{- include "common.tplvalues.render" (dict "value" $annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  accessModes:
    {{- if .Values.persistence.odooPVC.accessModes }}
    {{- toYaml .Values.persistence.odooPVC.accessModes | nindent 4 }}
    {{- else }}
    - {{ .Values.persistence.accessMode | quote }}
    {{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.odooPVC.size | quote }}
  {{- if .Values.persistence.selector }}
  selector:
    {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $ ) | nindent 4 }}
  {{- end }}
  {{- if .Values.persistence.dataSource }}
  dataSource:
    {{- include "common.tplvalues.render" (dict "value" .Values.persistence.dataSource "context" $ ) | nindent 4 }}
  {{- end }}
  storageClassName: {{ .Values.persistence.storageClass | quote }}

# PVC for PostgreSQL
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ include "common.names.fullname" . }}-postgresql
  namespace: {{ .Release.Namespace | quote }}
  labels: 
    {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    {{- if .Values.persistence.resourcePolicy }}
    helm.sh/resource-policy: {{ .Values.persistence.resourcePolicy | quote }}
    {{- end }}
    {{- if or .Values.persistence.annotations .Values.commonAnnotations }}
    {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.persistence.annotations .Values.commonAnnotations) "context" . ) }}
    {{- include "common.tplvalues.render" (dict "value" $annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  accessModes:
    {{- if .Values.persistence.postgresPVC.accessModes }}
    {{- toYaml .Values.persistence.postgresPVC.accessModes | nindent 4 }}
    {{- else }}
    - {{ .Values.persistence.accessMode | quote }}
    {{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.postgresPVC.size | quote }}
  {{- if .Values.persistence.selector }}
  selector:
    {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $ ) | nindent 4 }}
  {{- end }}
  {{- if .Values.persistence.dataSource }}
  dataSource:
    {{- include "common.tplvalues.render" (dict "value" .Values.persistence.dataSource "context" $ ) | nindent 4 }}
  {{- end }}
  storageClassName: {{ .Values.persistence.postgresStorageClass | quote }}

{{- end }}
